apiVersion: apps/v1
kind: Deployment
metadata:
  name: openblog-stage
  namespace: openblog
  labels:
    app: openblog
    ref: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openblog
      ref: dev
  template:
    metadata:
      labels:
        app: openblog
        ref: dev
    spec:
        #imagePullSecrets:
        #  - name: registry_name
      containers:
      - name: web
        image: lei_w/openblog:latest
        imagePullPolicy: Always
        env:
        - name: DEBUG
          value: "1"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: openblog_secret
              key: django_secret_key

        - name: DJANGO_ALLOWED_HOSTS
          valueFrom:
            secretKeyRef:
              name: openblog_secret
              key: django_allowed_hosts

        - name: SQL_ENGINE
          value: "django.db.backends.postgresql"
        - name: SQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: openblog-secret
              key: db_database 

        - name: SQL_PORT
          valueFrom:
            secretKeyRef:
              name: openblog-secret
              key: db_port

        - name: SQL_USER
          valueFrom:
            secretKeyRef:
              name: openblog-secret
              key: db_user

        - name: SQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: openblog-secret
              key: db_password

        - name: SQL_HOST
          valueFrom:
            secretKeyRef:
              name: openblog_secret
              key: db_host

        ports:
          - containerPort: 8000
      - image: gcr.io/cloudsql-docker/gce-proxy:1.16
        name: cloudsql-proxy
        command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                  "-instances= active-bot-272607:europe-north1:openblog-postgre=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-oauth-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
          - name: ssl-certs
            mountPath: /etc/ssl/certs
          - name: cloudsql
            mountPath: /cloudsql
      volumes:
        - name: cloudsql-oauth-credentials
          secret:
            secretName: cloudsql-oauth-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:
